"""
Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во элементов 
второго множества. Затем пользователь вводит сами элементы множеств.
"""
# # Решение:
# print()
# n = int(input("Введите количество чисел в первом наборе: "))
# m = int(input("Введите количество чисел во втором наборе: "))
# numbers_1 = set()
# numbers_2 = set()
# print("Введите числа для первого набора:")
# while len(numbers_1) < n:
#     numbers_1.add(int(input(">>> ")))
# print("Введите числа для второго набора:")
# while len(numbers_2) < m:
#     numbers_2.add(int(input(">>> ")))
# unic_numbers = numbers_1.union(numbers_2)
# print(f"Первый набор: {numbers_1}")
# print(f"Второй набор: {numbers_2}")
# print(f"Уникальные цифры из двух наборов: {unic_numbers}")
# print()


"""
Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, 
причем кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. 
Всего на грядке растет N кустов. Эти кусты обладают разной урожайностью, поэтому ко времени сбора 
на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из 
управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь 
непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход 
собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.
"""
# # Решение:
print()
n = int(input("Введите количество кустов на грядке: "))
berries = list()
print("Введите количество созревших ягод на каждом кусте:")
while len(berries) < n:
    berries.append(int(input(">>> ")))
print(berries)
max = 0
for i in range(len(berries)):
    x = 0
    if i == len(berries)-1:
        x += berries[i-1] + berries[i] + berries[0]
    elif i == 0:
        x += berries[len(berries)-1] + berries[i] + berries[i+1]
    else:
        x += berries[i-1] + berries[i] + berries[i+1]
    if x > max: max = x
print(f"Максимально за заход можно собрать {max} ягод")
print()

# # a = list(map(int, input().split()))